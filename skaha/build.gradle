plugins {
    id 'war'
    id 'maven-publish'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'org.jetbrains.dokka' version '1.6.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply from: 'opencadc.gradle'

sourceCompatibility = '11'

war {
    archiveFileName = 'skaha.war'
}

copy {
    from(System.getenv('A') + '/etc/') {
        include 'RsaSignaturePub.key'
    }
    into 'src/main/resources'
}

tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:[3.1.0,)'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
    // Used to assemble URIs programmatically
    implementation 'org.apache.httpcomponents.client5:httpclient5:[5.4.1,5.5)'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'commons-io:commons-io:[2.14.0,3.0.0)'

    // Used to merge YAML sections to fully configure Job files.
    implementation 'io.kubernetes:client-java:23.0.0'

    implementation 'org.opencadc:cadc-access-control:[1.1.29,1.2.0)'
    implementation 'org.opencadc:cadc-access-control-identity:[1.1.0,)'
    implementation 'org.opencadc:cadc-cdp:[1.2,)'
    implementation 'org.opencadc:cadc-gms:[1.0.14,2.0)'
    implementation 'org.opencadc:cadc-log:[1.2.1,1.3.0)'
    implementation 'org.opencadc:cadc-rest:[1.4.0,)'
    implementation 'org.opencadc:cadc-util:[1.9.7,2.0)'
    implementation 'org.opencadc:cadc-uws-server:[1.1.3,)'
    implementation 'org.opencadc:cadc-vosi:[1.4.3,)'
    implementation 'org.opencadc:cadc-permissions:[0.3.4,2.0)'
    implementation 'org.opencadc:cadc-registry:[1.7.7,)'

    implementation 'redis.clients:jedis:[5.0.2,6.0.0)'

    testImplementation 'junit:junit:[4.13,)'
    testImplementation 'org.json:json:20231013'
    testImplementation 'org.mockito:mockito-core:5.12.0'

}

spotless {
  java {
    // Interpret all files as utf-8
    encoding 'UTF-8'
    // Only require formatting of files that diff from main
    ratchetFrom 'origin/main'
    // Use the default importOrder configuration
    importOrder()
    // Remove unused imports
    removeUnusedImports()
    // Google Java Format, Android Open Source Project style which uses 4 spaces for indentation
    palantirJavaFormat('2.50.0').formatJavadoc(true)
    // Format annotations on a single line
    formatAnnotations()

    // Checks for javadoc formatting
    checkstyle {
      // Point to the same checkstyle.xml file as the checkstyle task
      configFile file("$rootDir/checkstyle.xml")
    }
  }
}
check.dependsOn spotlessCheck

// Create Java Code Coverage Reports
jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}
check.dependsOn jacocoTestReport

// Create JavaDoc
javadoc {
    destinationDir = file("${buildDir}/docs/javadoc")
}

// Create Java Documentation using Dokka for Github Markdown and HTML
tasks.dokkaGfm.configure {
    outputDirectory.set(file("${buildDir}/docs/dokka/gfm"))
    dokkaSourceSets {
        register("main") {
            sourceRoots.from(file("src/main/java"))
        }
    }
}
tasks.dokkaHtml.configure {
    outputDirectory.set(file("${buildDir}/docs/dokka/html"))
    dokkaSourceSets {
        register("main") {
            sourceRoots.from(file("src/main/java"))
        }
        configureEach {
            jdkVersion.set(11)
            sourceLink {
                localDirectory.set(file("src/main/java"))
                remoteUrl.set("https://github.com/opencadc/science-platform/tree/main/skaha/src/main/java")
            }
        }
    }
}
