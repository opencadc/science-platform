configurations {
    // Configuration for integration tests
    intTestRuntime.extendsFrom testRuntime
    intTestImplementation.extendsFrom testImplementation
}

sourceSets {
    test {
        resources.srcDirs += 'src/test/resources'
    }
    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        resources.srcDir file('src/intTest/resources')
        resources.srcDirs += new File(System.getenv('A') + '/test-certificates/')
    }
}

tasks.withType(Test) {
    // reset the report destinations so that intTests go to their own page
    //reports.html.destination = file("${reporting.baseDir}/${name}")
    reports.html.destination = file(reporting.baseDir.getAbsolutePath() + '/' + name)

    // Assign all Java system properties from
    // the command line to the tests
    systemProperties System.properties
}

task intTest(type: Test) {
    // set the configuration context
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    // run the tests always
    outputs.upToDateWhen { false }
}

test {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        // "STARTED",
    }
    jvmArgs = ['--add-opens=java.base/java.lang=ALL-UNNAMED', '--add-opens=java.base/java.util=ALL-UNNAMED']
}

intTest {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        // "STARTED",
    }
}
