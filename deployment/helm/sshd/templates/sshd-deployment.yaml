{{- $image := "linuxserver/openssh-server:latest" -}}
{{- $storageSpec := .Values.storage.service.spec | required ".storage.service.spec is missing.  This should declare the configuration of the underlying storage." -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: {{ .Release.Name }}-process
  name: {{ .Release.Name }}-process
  namespace: {{ .Values.skaha.namespace }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      run: {{ .Release.Name }}-process
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: {{ .Release.Name }}-process
    spec:
      initContainers:
      - name: backup-original-passwd-groups
        image: {{ .Values.deployment.sshd.image | default $image }}
        command: ["/bin/sh", "-c", "cp /etc/passwd /etc-passwd/passwd-orig && cp /etc/group /etc-group/group-orig"]
        volumeMounts:
        - mountPath: "/etc-passwd"
          name: etc-passwd
        - mountPath: "/etc-group"
          name: etc-group
      - name: init-users-groups
        image: {{ .Values.deployment.sshd.image | default $image }}
        imagePullPolicy: Always
        command: ["/init-users-groups/init-users-groups-from-service.sh"]
        env:
        - name: POSIX_MAPPER_URI
          value: {{ .Values.deployment.sshd.posixMapperResourceID | required "value for .Values.deployment.sshd.posixMapperResourceID is required." }}
        - name: REGISTRY_URL
          value: {{ .Values.deployment.sshd.registryURL }}
        - name: ROOT_PATH
          value: {{ .Values.deployment.sshd.rootPath | required "The rootPath property is required to be an absolute path." }}
        volumeMounts:
        - mountPath: "/etc-passwd"
          name: etc-passwd
        - mountPath: "/etc-group"
          name: etc-group
        - mountPath: "/init-users-groups"
          name: init-users-groups
        {{- if (lookup "v1" "Secret" .Release.Namespace "posix-mapper-api-keys") }}
        - mountPath: "/config/keys"
          name: posix-mapper-api-keys
          readOnly: true
        {{- end }}
        {{- with .Values.deployment.sshd.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    {{- range $extraHost := .Values.deployment.extraHosts }}
      hostAliases:
        - ip: {{ $extraHost.ip }}
          hostnames:
            - {{ $extraHost.hostname }}
    {{- end }}
      containers:
      - image: {{ .Values.deployment.sshd.image | default $image }}
        imagePullPolicy: Always
        name: {{ .Release.Name }}-process
        env:
        # In order for the sshd service to read authorized_keys files in user's home directories, 
        # we must run as root.
        - name: USER_NAME
          value: root
        - name: POSIX_MAPPER_URI
          value: {{ .Values.deployment.sshd.posixMapperResourceID }}
        - name: REGISTRY_URL
          value: {{ .Values.deployment.sshd.registryURL }}
        - name: ROOT_PATH
          value: {{ .Values.deployment.sshd.rootPath }}
        {{- with .Values.deployment.sshd.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 2222
          protocol: TCP
        resources:
          requests:
            memory: {{ .Values.deployment.sshd.resources.requests.memory }}
            cpu: {{ .Values.deployment.sshd.resources.requests.cpu }}
          limits:
            memory: {{ .Values.deployment.sshd.resources.limits.memory }}
            cpu: {{ .Values.deployment.sshd.resources.limits.cpu }}
        ports:
        - containerPort: 2222
          protocol: TCP
        volumeMounts:
        {{- if (lookup "v1" "Secret" .Release.Namespace "posix-mapper-api-keys") }}
        - mountPath: "/config/keys"
          name: posix-mapper-api-keys
          readOnly: true
        {{- end }}
        # Maintain the 'etc-passwd' and 'etc-group' mappings for the init-users-groups script to
        # periodically run.
        - mountPath: "/etc-passwd"
          name: etc-passwd
        - mountPath: "/etc-group"
          name: etc-group
        - mountPath: "/etc/periodic/15min"
          name: init-users-groups
        - mountPath: "/etc/passwd"
          name: etc-passwd
          subPath: passwd
        - mountPath: "/etc/group"
          name: etc-group
          subPath: group
        - mountPath: "/config/ssh_host_keys/ssh_host_rsa_key"
          name: {{ .Release.Name }}-config
          subPath: ssh_host_rsa_key
        - mountPath: "/config/ssh_host_keys/ssh_host_rsa_key.pub"
          name: ssh-host-rsa-key-pub
        - mountPath: "/config/ssh_host_keys/ssh_host_ecdsa_key"
          name: {{ .Release.Name }}-config
          subPath: ssh_host_ecdsa_key
        - mountPath: "/config/ssh_host_keys/ssh_host_ecdsa_key.pub"
          name: ssh-host-ecdsa-key-pub
        - mountPath: "/config/ssh_host_keys/ssh_host_ed25519_key"
          name: {{ .Release.Name }}-config
          subPath: ssh_host_ed25519_key
        - mountPath: "/config/ssh_host_keys/ssh_host_ed25519_key.pub"
          name: ssh-host-ed25519-key-pub
        - mountPath: "/config/ssh_host_keys/sshd_config"
          name: {{ .Release.Name }}-config
          subPath: sshd_config
        - mountPath: "{{ .Values.deployment.sshd.rootPath }}"
          name: cavern-volume
          subPath: {{ .Values.deployment.sshd.rootPath | regexFind "[^/].*$" }}
        {{- with .Values.deployment.sshd.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    {{- range $extraHost := .Values.deployment.extraHosts }}
      hostAliases:
        - ip: {{ $extraHost.ip }}
          hostnames:
            - {{ $extraHost.hostname }}
    {{- end }}
      priorityClassName: uber-user-preempt-high
      serviceAccountName: skaha
      volumes:
      - name: init-users-groups
        configMap:
          name: {{ .Release.Name }}-init-users-groups-config
          defaultMode: 0777
      {{- if (lookup "v1" "Secret" .Release.Namespace "posix-mapper-api-keys") }}
      - name: posix-mapper-api-keys
        secret:
          # Decimal equivalent to 0600 octal
          defaultMode: 384
          secretName: posix-mapper-api-keys
          items:
            - key: sshd-api-key
              path: sshd-api-key
      {{- end }}
      - name: {{ .Release.Name }}-config
        secret:
          # Decimal equivalent to 0600 octal
          defaultMode: 384
          secretName: {{ .Release.Name }}-config
      - name: etc-group
        emptyDir: {}
      - name: etc-passwd
        emptyDir: {}
      - name: ssh-host-rsa-key-pub
        emptyDir: {}
      - name: ssh-host-ecdsa-key-pub
        emptyDir: {}
      - name: ssh-host-ed25519-key-pub
        emptyDir: {}        
      - name: cavern-volume
        {{- toYaml $storageSpec | nindent 8 }}
      {{- with .Values.deployment.sshd.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
