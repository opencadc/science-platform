{{- $storageSpec := .Values.storage.service.spec | required ".storage.service.spec is missing.  This should declare the configuration of the underlying storage." -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: {{ .Release.Name }}-tomcat
  name: {{ .Release.Name }}-tomcat
  namespace: {{ .Values.skaha.namespace }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      run: {{ .Release.Name }}-tomcat
  template:
    metadata:
      labels:
        run: {{ .Release.Name }}-tomcat
    spec:
      securityContext:
        runAsUser: 0
      containers:
      - image: {{ .Values.deployment.cavern.image }}
        imagePullPolicy: {{ .Values.deployment.cavern.imagePullPolicy }}
        name: {{ .Release.Name }}-tomcat
        resources:
          requests:
            memory: {{ .Values.deployment.cavern.resources.requests.memory }}
            cpu: {{ .Values.deployment.cavern.resources.requests.cpu }}
          limits:
            memory: {{ .Values.deployment.cavern.resources.limits.memory }}
            cpu: {{ .Values.deployment.cavern.resources.limits.cpu }}
        {{- with .Values.deployment.cavern.extraEnv }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 8080
          protocol: TCP
        {{- with .Values.deployment.cavern.extraPorts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - mountPath: "/config"
          name: config-volume
        {{- if (lookup "v1" "Secret" .Release.Namespace "posix-mapper-api-keys") }}
        - mountPath: "/config/keys"
          name: posix-mapper-api-keys
          readOnly: true
        {{- end }}
        - mountPath: {{ .Values.deployment.cavern.filesystem.dataDir | required "The deployment.cavern.filesystem.dataDir not set.  It should be an absolute path." }}
          name: cavern-volume
        {{- with .Values.deployment.cavern.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      priorityClassName: uber-user-preempt-high
      serviceAccountName: skaha
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-config
      {{- if (lookup "v1" "Secret" .Release.Namespace "posix-mapper-api-keys") }}
      - name: posix-mapper-api-keys
        secret:
          defaultMode: 420
          secretName: posix-mapper-api-keys
          items:
            - key: cavern-api-key
              path: cavern-api-key
      {{- end }}
      - name: cavern-volume
        {{- toYaml $storageSpec | nindent 8 }}
      {{- with .Values.deployment.cavern.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
