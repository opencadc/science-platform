{{- range $secretIndex, $secretName := .Values.secrets }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretIndex }}
  namespace: {{ $.Values.skaha.namespace }}
type: Opaque
data:
  {{- range $certKey, $certValue := . }}
    {{ $certKey }}: {{ $certValue | quote }}
  {{- end }}
{{- end }}

---
{{- $secretName := "posix-mapper-api-secret" }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ $secretName }}"
  namespace: {{ $.Values.skaha.namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $apiSecret to existing secret data or generate a random one when not exists
  {{- $apiSecret := (get $secretData $secretName) | default (randAlphaNum 32 | b64enc) }}
  .api-key: {{ $apiSecret | quote }}
