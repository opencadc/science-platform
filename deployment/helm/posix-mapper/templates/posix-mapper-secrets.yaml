{{- range $secretIndex, $secretName := .Values.secrets }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretIndex }}
  namespace: {{ $.Release.Namespace }}
type: Opaque
data:
  {{- range $certKey, $certValue := . }}
    {{ $certKey }}: {{ $certValue | quote }}
  {{- end }}
{{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: posix-mapper-api-keys
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
{{- range $clientIndex, $clientName := .Values.deployment.posixMapper.authorizedClients }}
  {{- $clientSecretName := printf "%s-%s" $clientName "api-key" }}
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" $.Release.Namespace $clientSecretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $apiSecret to existing secret data or generate a random one when not exists
  {{- $apiSecret := (get $secretData $clientSecretName) | default (randAlphaNum 32 | b64enc) }}
  {{ $clientSecretName }}: {{ $apiSecret | quote }}
{{- end }}
